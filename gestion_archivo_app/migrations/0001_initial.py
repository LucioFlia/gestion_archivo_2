# Generated by Django 5.1.3 on 2024-12-14 21:05

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Area",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="Area Code"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Area Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BoxType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Box Type"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DocType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Document Type"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SystemConfigKeyValues",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=100, unique=True)),
                ("value", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Universe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("doc_number", models.PositiveIntegerField()),
                ("name", models.TextField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("user", "User"),
                            ("manager", "Manager"),
                            ("archive_responsible", "Archive Responsible"),
                            ("admin", "System Administrator"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "area",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="gestion_archivo_app.area",
                        verbose_name="User Area",
                    ),
                ),
                (
                    "deposit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="deposits",
                        to="gestion_archivo_app.area",
                        verbose_name="Archive",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Box",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=10, unique=True, verbose_name="Box Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Box Description"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("closed", "Closed"),
                            ("waiting_close", "Waiting for Close"),
                            ("waiting_archive", "Waiting for Archive"),
                            ("accepted_archive", "Accepted by Archive Responsible"),
                            ("archived", "In Archive"),
                        ],
                        default="open",
                        max_length=32,
                    ),
                ),
                (
                    "id",
                    models.AutoField(
                        primary_key=True, serialize=False, verbose_name="Box ID"
                    ),
                ),
                (
                    "creation_date",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Creation Date"
                    ),
                ),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "close_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Close Date"
                    ),
                ),
                (
                    "destruction_year",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (2024, "2024"),
                            (2025, "2025"),
                            (2026, "2026"),
                            (2027, "2027"),
                            (2028, "2028"),
                            (2029, "2029"),
                            (2030, "2030"),
                            (2031, "2031"),
                            (2032, "2032"),
                            (2033, "2033"),
                            (2034, "2034"),
                            (2035, "2035"),
                            (2036, "2036"),
                            (2037, "2037"),
                            (2038, "2038"),
                            (2039, "2039"),
                            (2040, "2040"),
                            (2041, "2041"),
                            (2042, "2042"),
                            (2043, "2043"),
                            (2044, "2044"),
                            (2045, "2045"),
                            (2046, "2046"),
                            (2047, "2047"),
                            (2048, "2048"),
                            (2049, "2049"),
                            (2050, "2050"),
                            (2051, "2051"),
                            (2052, "2052"),
                            (2053, "2053"),
                            (2054, "2054"),
                            (2055, "2055"),
                            (2056, "2056"),
                            (2057, "2057"),
                            (2058, "2058"),
                            (2059, "2059"),
                            (2060, "2060"),
                            (2061, "2061"),
                            (2062, "2062"),
                            (2063, "2063"),
                            (2064, "2064"),
                            (2065, "2065"),
                            (2066, "2066"),
                            (2067, "2067"),
                            (2068, "2068"),
                            (2069, "2069"),
                            (2070, "2070"),
                            (2071, "2071"),
                            (2072, "2072"),
                            (2073, "2073"),
                            (2074, "2074"),
                            (2075, "2075"),
                            (2076, "2076"),
                            (2077, "2077"),
                            (2078, "2078"),
                            (2079, "2079"),
                            (2080, "2080"),
                            (2081, "2081"),
                            (2082, "2082"),
                            (2083, "2083"),
                            (2084, "2084"),
                            (2085, "2085"),
                            (2086, "2086"),
                            (2087, "2087"),
                            (2088, "2088"),
                            (2089, "2089"),
                            (2090, "2090"),
                            (2091, "2091"),
                            (2092, "2092"),
                            (2093, "2093"),
                            (2094, "2094"),
                            (2095, "2095"),
                            (2096, "2096"),
                            (2097, "2097"),
                            (2098, "2098"),
                            (2099, "2099"),
                        ],
                        verbose_name="Destruction Year",
                    ),
                ),
                ("total_sheets", models.PositiveIntegerField(default=0)),
                (
                    "area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="boxes",
                        to="gestion_archivo_app.area",
                    ),
                ),
                (
                    "current_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="current_boxes",
                        to="gestion_archivo_app.area",
                        verbose_name="Current Area",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="boxes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "box_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="boxes",
                        to="gestion_archivo_app.boxtype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Documentation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cuit_number", models.PositiveIntegerField()),
                ("name", models.CharField(max_length=255)),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Document Description"
                    ),
                ),
                ("corpus", models.TextField()),
                ("sheets", models.PositiveIntegerField()),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                (
                    "box",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="documentations",
                        to="gestion_archivo_app.box",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "doc_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="documents",
                        to="gestion_archivo_app.doctype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BoxLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "log_type",
                    models.CharField(
                        choices=[
                            ("new", "New Box"),
                            ("change_area", "Change of Area"),
                            ("doc_added", "Document Added"),
                            ("doc_removed", "Document Removed"),
                            ("doc_edited", "Document Edited"),
                            ("status_change", "Status Changed"),
                            ("area_change", "Area Changed"),
                        ],
                        max_length=20,
                    ),
                ),
                ("previous_status", models.CharField(max_length=50)),
                ("new_status", models.CharField(max_length=50)),
                ("observations", models.TextField(blank=True, null=True)),
                ("log_date", models.DateTimeField(auto_now_add=True)),
                (
                    "area_destination",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="destination_logs",
                        to="gestion_archivo_app.area",
                    ),
                ),
                (
                    "area_origin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="origin_logs",
                        to="gestion_archivo_app.area",
                    ),
                ),
                (
                    "box",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="logs",
                        to="gestion_archivo_app.box",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="user_logs",
                        to="gestion_archivo_app.area",
                    ),
                ),
                (
                    "doc_added",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="logs_added",
                        to="gestion_archivo_app.documentation",
                    ),
                ),
                (
                    "doc_removed",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="logs_removed",
                        to="gestion_archivo_app.documentation",
                    ),
                ),
            ],
        ),
    ]
